# Variables
@baseUrl = http://localhost:3333

# Health check
# @name healthCheck
GET {{baseUrl}}/health

###

# Create user
# @name createUser
# @description This endpoint creates a new user with the provided name, email and password.
# @requestBody
# @response 201 - Returns the created room.

POST {{baseUrl}}/create-user
Accept: application/json
Content-Type: application/json

{
  "name": "Fagner Lopes",
  "email": "fagnernlopes@gmail.com",
  "password": "201125",
  "acceptsAds": true
}

###


# Login
# @name login
# @description This endpoint validate credentials from email and password.
# @requestBody
# @response 201 - Returns the JWT access token.

POST {{baseUrl}}/login
Accept: application/json
Content-Type: application/json

{
  "email": "fagnernlopes@gmail.com",
  "password": "201125"
}

###

@jwtToken = {{login.response.body.$.access_token}}

###

# Get Profile
# @name getProfile
# @description This endpoint returns the authenticated user's profile.
# @response 200 - Returns the user object.

GET {{baseUrl}}/me
Accept: application/json
Authorization: Bearer {{jwtToken}}

###

# Refresh Token
# @name refreshToken
# @description Este endpoint renova o access token usando o refresh token armazenado em cookie HTTP Only.
# @response 200 - Retorna um novo access token.


POST {{baseUrl}}/refresh-token
Accept: application/json

###

# Get rooms
# @name getRooms
# @description This endpoint retrieves a list of all rooms.
# @response 200 - Returns a list of rooms.
GET {{baseUrl}}/rooms
Authorization: Bearer {{jwtToken}}


###

# Create room
# @name createRoom
# @description This endpoint creates a new room with the provided name and description.
# @requestBody
# @response 201 - Returns the created room.
POST {{baseUrl}}/rooms
Accept: application/json
Content-Type: application/json
Authorization: Bearer {{jwtToken}}

{
  "name": "Sala de Teste",
  "description": "Esta é uma sala de teste para verificar a criação de salas."
}

###

@roomId = {{getRooms.response.body.$.[0].id}}

###

# Get room questions
# @name getRoomQuestions
# @description This endpoint retrieves all questions for a specific room.
# @pathParam roomId - The unique identifier of the room.
# @response 200 - Returns a list of questions for the specified room.
GET {{baseUrl}}/rooms/{{roomId}}/questions


###
# Create question
# @name createQuestion
# @description This endpoint creates a new question in a specific room.
# @pathParam roomId - The unique identifier of the room.
# @requestBody
# @response 201 - Returns the created question.
POST {{baseUrl}}/rooms/{{roomId}}/questions
Accept: application/json
Content-Type: application/json

{
  "question": "o que é Reactjs?"
}

###
# Create question - EXEMPLO FORA DO CONTEXTO
# @name createQuestion
# @description This endpoint creates a new question in a specific room.
# @pathParam roomId - The unique identifier of the room.
# @requestBody
# @response 201 - Returns the created question.
POST {{baseUrl}}/rooms/17d3c751-d16a-4202-a13b-f0c6fff0e6f8/questions
Accept: application/json
Content-Type: application/json

{
  "question": "Quanto está custando o café no Brasil?"
}
